name: build-docker

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - .github/workflows/build-docker.yaml
      - apps/**

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      jobs: ${{ env.MONOTONIX_JOBS }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
      - uses: yuya-takeyama/monotonix/actions/load-jobs@1ee58090547501c1b691407d21db1dee9374de7e # v0.0.4
        with:
          root-dir: apps
          required-config-keys: 'docker_build'
      - if: ${{ github.event_name == 'pull_request' }}
        uses: yuya-takeyama/monotonix/actions/filter-jobs-by-changed-files@1ee58090547501c1b691407d21db1dee9374de7e # v0.0.4
      - uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: arn:aws:iam::920373013500:role/monotonix-state-manager
          aws-region: ap-northeast-1
      - uses: yuya-takeyama/monotonix/actions/filter-jobs-by-dynamodb-state@1ee58090547501c1b691407d21db1dee9374de7e # v0.0.4
        with:
          dynamodb-table: monotonix-state
          dynamodb-region: ap-northeast-1
      - uses: yuya-takeyama/monotonix/actions/load-docker-build-job-params@1ee58090547501c1b691407d21db1dee9374de7e # v0.0.4
        with:
          global-config-file-path: apps/monotonix-global.yaml
          timezone: Asia/Tokyo

  build:
    name: ${{ matrix.job.context.label }}
    needs: setup
    if: ${{ needs.setup.outputs.jobs != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      actions: read
    strategy:
      matrix:
        job: ${{ fromJSON(needs.setup.outputs.jobs) }}
      fail-fast: false
    steps:
      - uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: arn:aws:iam::920373013500:role/monotonix-state-manager
          aws-region: ap-northeast-1
      - uses: yuya-takeyama/monotonix/actions/set-dynamodb-state-to-running@1ee58090547501c1b691407d21db1dee9374de7e # v0.0.4
        with:
          dynamodb-table: monotonix-state
          dynamodb-region: ap-northeast-1
          job: ${{ toJSON(matrix.job) }}
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: ${{ matrix.job.params.docker_build.registry.aws.iam.role }}
          aws-region: ${{ matrix.job.params.docker_build.registry.aws.iam.region }}
      - uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: ${{ matrix.job.params.docker_build.registry.aws.repository.type }}
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      # Go Build
      - if: ${{ matrix.job.configs.docker_build_go_build }}
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: ${{ matrix.job.configs.docker_build_go_build.go_version_file }}
          cache-dependency-path: ${{ matrix.job.configs.docker_build_go_build.cache_dependency_path }}
      - if: ${{ matrix.job.configs.docker_build_go_build }}
        name: Run Go Build for docker build
        run: |
          cd "$APP_PATH"
          go build -o main
        env:
          APP_PATH: ${{ matrix.job.params.docker_build.context }}
          CGO_ENABLED: '0'
          GOOS: linux
          GOARCH: amd64

      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ${{ matrix.job.params.docker_build.context }}
          push: true
          tags: ${{ matrix.job.params.docker_build.tags }}
          platforms: ${{ matrix.job.params.docker_build.platforms }}
          provenance: false # true だと Lambda で動かないため
