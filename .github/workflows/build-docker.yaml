name: build-docker

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-docker.yaml
      - apps/**
  pull_request:
    paths:
      - .github/workflows/build-docker.yaml
      - apps/**

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      job-params: ${{ steps.filtered-job-params.outputs.result }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - uses: yuya-takeyama/monotonix/actions/load-job-params-from-config-files@init
        with:
          root-dir: apps
      - uses: yuya-takeyama/monotonix/actions/load-docker-build-job-params@init
        with:
          global-config-file-path: apps/monotonix-global.yaml
          datetime-tag-timezone: Asia/Tokyo
      - uses: yuya-takeyama/monotonix/actions/load-generic-job-params@init
        with:
          config-key: generic_foo
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::943566097936:role/monotonix-state-read-writer
          aws-region: ap-northeast-1
      - id: filtered-job-params
        uses: yuya-takeyama/monotonix/actions/filter-job-params-by-dynamodb-state@init
        with:
          dynamodb-table: monotonix-state
          dynamodb-region: ap-northeast-1
      - uses: yuya-takeyama/monotonix/actions/store-dynamodb-state@init
        with:
          job-params: ${{ env.MONOTONIX_JOB_PARAMS }}
          dynamodb-table: monotonix-state
          dynamodb-region: ap-northeast-1
          status: 'running'
          ttl-in-hours: 1

  build:
    name: ${{ matrix.job-param.app_context.label }}
    needs: setup
    if: ${{ needs.setup.outputs.job-params != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        job-param: ${{ fromJSON(needs.setup.outputs.job-params) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ matrix.job-param.params.docker_build.registry.aws.iam.role }}
          aws-region: ${{ matrix.job-param.params.docker_build.registry.aws.iam.region }}
      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: ${{ matrix.job-param.params.docker_build.registry.aws.repository.type }}
      - uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      - uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: ${{ matrix.job-param.params.docker_build.context }}
          push: true
          tags: ${{ matrix.job-param.params.docker_build.tags }}
          platforms: ${{ matrix.job-param.params.docker_build.platforms }}

      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        if: always()
        with:
          role-to-assume: arn:aws:iam::943566097936:role/monotonix-state-read-writer
          aws-region: ap-northeast-1
      - uses: yuya-takeyama/monotonix/actions/store-dynamodb-state@init
        with:
          dynamodb-table: monotonix-state
          dynamodb-region: ap-northeast-1
          status: 'success'
          job-params: ${{ toJSON(matrix.job-param) }}
          ttl-in-days: 180
      - uses: yuya-takeyama/monotonix/actions/store-dynamodb-state@init
        if: failure()
        with:
          dynamodb-table: monotonix-state
          dynamodb-region: ap-northeast-1
          status: 'failure'
          job-params: ${{ toJSON(matrix.job-param) }}
          ttl-in-hours: 1
